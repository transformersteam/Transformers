
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>目标管理</title>
    <script src="~/js/jquery-3.3.1.js"></script>
    <link href="~/lib/bootstrap/dist/css/bootstrap.css" rel="stylesheet" />
    <script src="~/zTree_v3/js/jquery.ztree.all.min.js"></script>             @*ztree*@
    <link href="~/zTree_v3/css/zTreeStyle/zTreeStyle.css" rel="stylesheet" />
    <script src="~/js/vue.js"></script>             @*vue*@
    <script src="~/js/axios.js"></script>
    <script src="~/layui-v2.4.5/layui/layui.js"></script>   @*layui模态框*@
    <link href="~/layui-v2.4.5/layui/css/layui.css" rel="stylesheet" />
    <style>
        #tree {
            width: 30%;
            height: 200%;
            float: left;
            border: 1px solid #000
        }
    </style>
</head>
<body>
    <div id="goaltree" style="float: left;padding-left: 100px">
        <div style="height: 1500px">
            <div class="panel-heading" style="font-size:20px">
                目标库
                <div style="float:right">
                    <input id="Button1" type="button" value="目标下达" onclick="goalAdd()" class="btn btn-primary" />
                </div>
            </div>
            <div>
                <div class="panel-heading">目标名称</div>
                <ul id="ztree" class="ztree" style="height: 500px"></ul>
            </div>
        </div>
    </div>
    <div style="float:right;padding-right: 100px" id="app">
        <div class="panel-heading">目标详情</div>
        <table class="table table-bordered table-striped text-center" style="width: 1300px" v-for="data in goaldetails">
            <tr>
                <td>指标名称:<span>{{data.goalName}}</span></td>
                <td>指标单位:<span>{{data.role_Name}}</span></td>
                <td>主治标:<span>2019年集团经营目标</span></td>
            </tr>
            <tr>
                <td>指标类型:<span>{{data.goalType_Name}}</span></td>
                <td>指标类别:<span>{{data.goalType_Name}}</span></td>
                <td>指标等级:<span>{{data.indexLevel_Grade}}</span></td>
            </tr>
            <tr>
                <td>反馈频次</td>
                <td colspan="3"><span>{{data.frequency_Name}}</span></td>
            </tr>
            <tr>
                <td>开始时间:<span>{{data.goal_CreateTime}}</span></td>
                <td>完成时间:<span>{{data.goal_EndTime}}</span></td>
                <td>周期:<span>{{}}</span></td>
            </tr>
            <tr>
                <td>责任单位:<span>{{data.role_Name}}</span></td>
                <td>责任人:<span>{{data.goal_ChargePeople}}</span></td>
                <td>考核权重:<span>{{data.goal_Weight}}</span></td>
            </tr>
            <tr>
                <td>填报人:<span>{{data.goal_Informant}}</span></td>
                <td>协办人:<span>{{data.goal_Organiser}}</span></td>
                <td></td>
            </tr>
            <tr>
                <td>计算公式/评价标准</td>
                <td colspan="3"><span>{{}}</span></td>
            </tr>
            <tr>
                <td>数据来源</td>
                <td colspan="3"><span>{{}}</span></td>
            </tr>
            <tr>
                <td>支持表格</td>
                <td colspan="3"><span>{{data.file_Name}}</span></td>
            </tr>
        </table>
        <div class="panel-heading">指标分解</div>
        <table class="table table-bordered table-striped text-center">
            <tr>
                <td>月份</td>
                <td>1月</td>
                <td>1-2月</td>
                <td>1-3月</td>
                <td>1-4月</td>
                <td>1-5月</td>
                <td>1-6月</td>
                <td>1-7月</td>
                <td>1-8月</td>
                <td>1-9月</td>
                <td>1-10月</td>
                <td>1-11月</td>
                <td>年度目标</td>
            </tr>
            <tr>
                <td>目标值</td>
                <td>月份</td>
                <td>月份</td>
                <td>月份</td>
                <td>月份</td>
                <td>月份</td>
                <td>月份</td>
                <td>月份</td>
                <td>月份</td>
                <td>月份</td>
                <td>月份</td>
                <td>月份</td>
                <td>月份</td>
            </tr>
        </table>
        <div class="panel-heading">反馈确认</div>
        <div style="padding-left: 100px">
            确认流程
        </div>
        <div style="padding-left: 250px">
            <p>郭莱(模块运营总经理)</p>
            <p>明和(单位一把手)</p>
            <p>柯振亮(集团运营负责人)</p>
            <p>王振华(督办领导)</p>
        </div>
        <div style="float: right">
            <input id="Button1" type="button" value="设置关注人" class="btn btn-primary" />&nbsp;&nbsp;
            <input id="Button1" type="button" value="指标删除" class="btn btn-primary" />&nbsp;&nbsp;
            <input id="Button1" type="button" value="指标调整" class="btn btn-primary" />
        </div>
    </div>
</body>
</html>
<script>
    //文档就绪函数
    $(function () {
        getGoalList();
    })

    //ztree配置信息
    var setting = {
        view: {
            dblClickExpand: false,//双击节点时，是否自动展开父节点的标识
            showLine: true,//是否显示节点之间的连线
            fontCss: { 'color': 'black', 'font-weight': 'bold' },//字体样式函数
            selectedMulti: true, //设置是否允许同时选中多个节点
        },
        check: {
            //chkboxType: { "Y": "ps", "N": "ps" },
            chkboxType: { "Y": "", "N": "" },
            chkStyle: "checkbox",//复选框类型
            enable: true //每个节点上是否显示 CheckBox
        },
        //增删改，移动复制
        edit: {
            enable: true, //如果enable为flase，那么树就不能移动了
            showRemoveBtn: false, //是否显示树的删除按钮
            showRenameBtn: false, //是否显示数的重命名按钮
            isSimpleData: true, //数据是否采用简单 Array 格式，默认false
            treeNodeKey: "id",  //在isSimpleData格式下，当前节点id属性
            treeNodeParentKey: "parentId",//在isSimpleData格式下，当前节点的父节点id属性
            showLine: true, //是否显示节点间的连线
            removeTitle: "删除节点",//删除Logo的提示
            renameTitle: "编辑节点",//修改Logo的提示
            //拖拽
            drag: {
                isCopy: true,//能够复制
                isMove: true,//能够移动
                prev: false,//不能拖拽到节点前
                next: false,//不能拖拽到节点后
                inner: true//只能拖拽到节点中
            }
        },
        data: {
            simpleData: {//简单数据模式
                enable: true,
                idKey: "id",
                pIdKey: "pId",
                rootPId: null
            }
        },
        callback: {
            beforeExpand: zTreeBeforeExpand, // 用于捕获父节点展开之前的事件回调函数，并且根据返回值确定是否允许展开操作
            //单击事件
            onClick: zTreeOnClick
        }
    };

    function zTreeBeforeExpand(treeId, treeNode) {
        return true;
    };

    //获取结点
    function getGoalList() {
        $.ajax({
            url: "/GoalManage/GetJsonGoalTree",
            type: "get",
            async: false,
            success: function (data) {
                var json = eval(data); // 数组
                zNodes = "[";
                $.each(json, function (index, item) {
                    if (json[index].goal_ParentId == 0) {
                        zNodes += "{id:" + json[index].goalId
                            + ",pId:" + json[index].goal_ParentId
                            + ",name:'" + json[index].goalName
                            + "',open:true}";
                    }
                    else {
                        zNodes += "{id:" + json[index].goalId
                            + ",pId:" + json[index].goal_ParentId
                            + ",name:'" + json[index].goalName
                            + "'}";
                    }
                    if (index != json.length - 1)
                        zNodes += ",";
                });
                zNodes += "]";
                zNodes = eval(zNodes);
                zTreeObj = $.fn.zTree.init($("#ztree"), setting, zNodes);
            },
            error: function (e) {
                alert(e)
            }
        });
    };

    //点击事件
    function zTreeOnClick(event, treeId, treeNode) {   //treeNode节点信息
        alert(treeNode.id);
         console.log(treeNode)
        getNodeDetailsById(treeNode.id,treeNode.name);    //传递目标id
    }

    //根据id查询目标详情
    function getNodeDetailsById(id, name) {   //获取节点id 查询详情
        alert(id)
        var vm = new Vue({
            el: "#app",
            data: {
                goaldetails: [],
                goalName:"",
            },
            mounted() {
                this.detailsById();
            },
            methods: {
                detailsById: function () {    //根据id显示目标详情
                    axios.get('@Url.Action("GetGoalDetailsById","GoalManage")', { params: {id:id}}).then(
                        (response) => {
                            this.goaldetails = response.data;
                        }
                    )
                }
            }
        })
    }

    function goalAdd() {
        layui.use('layer', function () {
              var layer = layui.layer;
                    layer.open({
                        type: 2,
                        title:"目标详情",
                        shadeClose: true,
                        shade: 0.8,
                        area: ['1700px', '1000px'],
                        content: "/GoalManage/GoalAdd",
                    });
         })
    }
</script>