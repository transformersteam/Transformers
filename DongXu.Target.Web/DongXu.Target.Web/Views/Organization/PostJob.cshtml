
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    <link href="~/zTree_v3/css/zTreeStyle/zTreeStyle.css" rel="stylesheet" />
    <script src="~/js/jquery-3.3.1.js"></script>
    <script src="~/zTree_v3/js/jquery.ztree.all.min.js"></script>
    <script src="~/js/vue.js"></script>
    <script src="~/js/axios.js"></script>
    <link href="~/lib/bootstrap/dist/css/bootstrap.css" rel="stylesheet" />
    <script src="~/lib/bootstrap/dist/js/bootstrap.js"></script>
    <style>
        #max {
            width: 1500px;
            height: 600px;
            margin-left: 30px;
        }

        #title {
            width: 100%;
            height: 60px;
        }

            #title p {
                margin-left: 15px;
                margin-top: 15px;
            }

        #tree {
            width: 30%;
            height: 100%;
            float: left;
            border: 1px solid #000
        }

        #message {
            height: 70%;
            height: 100%;
            float: left;
            border: 1px solid #000
        }

            #message table {
                width: 600px;
                margin-left: 100px;
                margin-top: 50px;
                border-collapse: separate;
                border-spacing: 0px 10px;
            }
    </style>
</head>

<body><input id="Button1" onclick="acc()" type="button" value="button" />
    <div id="max">
        <div id="title"><p>组织管理</p></div>
        <div id="tree">
            <ul id="regionZTree" class="ztree"></ul>
        </div>
        <div id="message">
            <table>
                <tr>
                    <th>用户姓名</th>
                    <th>用户账号</th>
                    <th>操作</th>
                </tr>
                <tbody id="righttab">

                </tbody>
                <tfoot id="righttabfoot">

                </tfoot>
            </table>
        </div>
    </div>

    @*模态框*@
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title" id="myModalLabel">在当前节点添加用户</h4>
                </div>

                
                
                    <div class="modal-body">
                        <table class="table">
                            <tr>
                                <td>用户名：</td>
                                <td><input id="btnname" type="text" value="" /></td>
                            </tr>
                            <tr>
                                <td>密码：</td>
                                <td><input id="btnpass" type="text" value="" /></td>
                            </tr>
                            <tr>
                                <td>真实姓名：</td>
                                <td><input id="btnrealname" type="text" value="" /></td>
                            </tr>
                            <tr>
                                <td>是否启用：</td>
                                <td><input id="Radio1" name="radenable" type="radio" value="true" />启用
                                    <input id="Radio1" name="radenable" type="radio" value="false" />未启用</td>
                            </tr>
                            <tr>
                                <td>创建时间：</td>
                                <td><input id="btntime" type="text" value="" /></td>
                            </tr>
                            <tr>
                                <td>职业：</td>
                                <td>
                                    <select id="Select1">
                                        <option></option>
                                    </select>
                                </td>
                            </tr>

                        </table>
                        
                    </div>
                    <input id="Button1" type="button" onclick="acc()" value="button" />
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">关闭</button>
                    <button type="button" onclick="addUser()" class="btn btn-primary">提交更改</button>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal -->
    </div>


</body> 
</html>
<script>
    var zNodes = "";
    var RoleName = "";
    var name = "NewNode";
    var date = new Date();
    var year = date.getFullYear();
    var month = date.getMonth() + 1;
    var day = date.getDate();
    if (month < 10) {
        month = "0" + month;
    }
    if (day < 10) {
        day = "0" + day;
    }
    var nowDate = year + "-" + month + "-" + day;
    $(function () {
        GetRolesOList();
    })
    function zTreeBeforeExpand(treeId, treeNode) {
        return true;
    };
    var setting = {
        view: {
            addHoverDom: addHoverDom,
            removeHoverDom: removeHoverDom,
            dblClickExpand: false,//双击节点时，是否自动展开父节点的标识
            showLine: true,//是否显示节点之间的连线
            fontCss: { 'color': 'black', 'font-weight': 'bold' },//字体样式函数
            selectedMulti: true, //设置是否允许同时选中多个节点
        },
        check: {
            //chkboxType: { "Y": "ps", "N": "ps" },
            chkboxType: { "Y": "", "N": "" },
            chkStyle: "checkbox",//复选框类型
            enable: true //每个节点上是否显示 CheckBox
        },
        //增删改，移动复制
        edit: {
            enable: false, //如果enable为flase，那么树就不能移动了
            showRemoveBtn: false, //是否显示树的删除按钮
            showRenameBtn: false, //是否显示数的重命名按钮
            isSimpleData: true, //数据是否采用简单 Array 格式，默认false
            treeNodeKey: "id",  //在isSimpleData格式下，当前节点id属性
            treeNodeParentKey: "parentId",//在isSimpleData格式下，当前节点的父节点id属性
            showLine: true, //是否显示节点间的连线
            removeTitle: "删除节点",//删除Logo的提示
            renameTitle: "编辑节点",//修改Logo的提示
            //拖拽
            drag: {
                isCopy: true,//能够复制
                isMove: true,//能够移动
                prev: false,//不能拖拽到节点前
                next: false,//不能拖拽到节点后
                inner: true//只能拖拽到节点中
            }
        },
        data: {
            simpleData: {//简单数据模式
                enable: true,
                idKey: "id",
                pIdKey: "pId",
                rootPId: null
            }
        },
        callback: {
            beforeExpand: zTreeBeforeExpand, // 用于捕获父节点展开之前的事件回调函数，并且根据返回值确定是否允许展开操作
            //单击事件
            onClick: zTreeOnClick,
            onRename: zTreeOnRename,//修改
            onRemove: zTreeOnRemove,//删除
        }
    };
    //获取结点
    function GetRolesOList() {
        $.ajax({

            url: "http://localhost:8888/api/Organization/GetRolesOList",

            async: false,
            success: function (data) {
                var json = eval(data); // 数组
                zNodes = "[";
                $.each(json, function (index, item) {
                    if (json[index].rolePid == 0) {
                        zNodes += "{id:" + json[index].roleId
                            + ",pId:" + json[index].rolePid
                            + ",name:'" + json[index].roleName
                            + "',open:true}";
                    }
                    else {
                        zNodes += "{id:" + json[index].roleId
                            + ",pId:" + json[index].rolePid
                            + ",name:'" + json[index].roleName
                            + "'}";
                    }
                    if (index != json.length - 1)
                        zNodes += ",";
                });
                zNodes += "]";
                zNodes = eval(zNodes);
                zTreeObj = $.fn.zTree.init($("#regionZTree"), setting, zNodes);
            },
            error: function (e) {
            }
        });
    };
    //点击事件
    function zTreeOnClick(event, treeId, treeNode) {
        //$.ajax({
        //    url: "http://localhost:8888/api/Organization/GetRolesOListById?RoleId=" + treeNode.id,
        //    async: false,
        //    success: function (data) {
        //        vm.$data.RoleId = data.roleId;
        //        vm.$data.RoleName = data.roleName;
        //        vm.$data.RoleIdentify = data.roleIdentify;
        //        if (data.roleIsEnable == 1) {
        //            vm.$data.RoleIsEnable = "1";
        //        }
        //        else {
        //            vm.$data.RoleIsEnable = "0";
        //        }

        //        vm.$data.RoleCreatePeople = data.roleCreatePeople;
        //        vm.$data.RoleCreateTime = data.roleCreateTime;
        //        if (data.roleModifyPeople == undefined) {
        //            vm.$data.RoleModifyPeople = "无人修改";
        //        }
        //        else {
        //            vm.$data.RoleModifyPeople = data.roleModifyPeople;
        //        }
        //        if (data.roleModifyTime == undefined) {
        //            vm.$data.RoleModifyTime = "无修改时间";
        //        }
        //        else {
        //            vm.$data.RoleModifyTime = data.roleModifyTime;
        //        }
        //    }
        //})
        window.treeNodeid = treeNode.id;
        alert(treeNode.id);
        $.ajax({
            url: "http://localhost:8888/api/Organization/ChlidrenUserByRole?id=" + treeNode.id,
            success: function (data) {
                console.log(data);
                $("#righttab").empty();
                $("#righttabfoot").empty();
                $(data).each(function () {
                    $("#righttab").append('<tr><th> ' + this.user_RealName + '</th ><th>' + this.user_Name + '</th><th><input id="Button1" onclick="deleteUser(' + this.user_Id + ')" type="button" value="button" class="btn-link" /></th></tr>')
                }) 
                $("#righttabfoot").append('<button class="btn btn-primary btn-lg" data-toggle="modal" data-target="#myModal">添加一个用户</button>');
            }
        })
    }



    
    $('#myModal').on('shown.bs.modal', function (e) {
        $.ajax({
            url: "http://localhost:8888/api/Organization/ChildrenJobByRole?Role_Id=" + treeNodeid,
            success: function (data) {
                $("#Select1").empty();
                $(data).each(function () {
                    $("#Select1").append('<option  value="' + this.role_Id + '">'+this.role_Name+'</option>')
                })
            }
        })
    })
    

    function deleteUser(userid) {
        $.ajax({
            url: "https://localhost:8888/api/Organization/DeleteUser?userid=" + userid,
            success: function (data) {
                if (data> 0 )
                {
                    alert("已停用");
                    return;
                }
                alert("系统出错，请稍后再试！");
            }
        })
    }



    function addUser() {
        var UserName = $("#btnname").val();
        var UserPass = $("#btnpass").val();
        var UserRealName = $("#btnrealname").val();
        var UserRoleName = $("#Select1").text();  
        var UserIsEnable = $("input[name='radenable']:checked").val();
        var UserCreateTime = $("#btntime").val();
        var roleid = $("#Select1").val();

        var user = {
            "userId": 0,
            "userName": UserName,
            "userPass": UserPass,
            "userRealName": UserRealName,
            "userRoleName": UserRoleName,
            "userIsEnable": UserIsEnable,
            "userCreateTime": UserCreateTime,
            "userRoleid": roleid
        };
        var val = JSON.stringify(user);

        $.ajax({
            url: "http://localhost:8888/api/Organization/AddUser",
            type: "POST",
            contentType: "application/json; charset=utf-8",
            data: val,
            crossDomain: true,
            dataType: 'json',
            success: function (data) {
                if (data > 0) {
                    $("#myModal").modal('hide');  //手动关闭
                    window.location.reload();
                    return;
                }
                alert("添加失败");
            }
        });
    }



    function acc() {

        var acc = {
            "userId": 0,
            "userName": 1,
            "userPass": 1,
            "userRealName": 1,
            "userRoleName": 1,
            "userIsEnable": true,
            "userCreateTime": "2019-06-16T13:31:57.236Z",
            "userRoleid": 17
        };
        var val = JSON.stringify(acc);
        alert("val:" + val);
        $.ajax({
            url: "http://localhost:8888/api/Organization/AddUser",
            type: "POST",
            contentType: "application/json; charset=utf-8",
            data: val,
            crossDomain: true,
            dataType: 'json',
            success: function (data) {
                alert(data);
            }
        });

    }


    /**
     * 修改子节点
     * param obj
     */
    function editZTreeNode(obj) {
        var zTree = $.fn.zTree.getZTreeObj("regionZTree");
        var nodes = zTree.getSelectedNodes();
        for (var i = 0; i < nodes.length; i++) {
            nodes[i].name = obj;
            zTree.updateNode(nodes[i]);
        }
    }
    /**
     *  删除子节点 --选中节点
     * param obj
     */
    function removeZTreeNodeBySelect() {
        var zTree = $.fn.zTree.getZTreeObj("regionZTree");
        var nodes = zTree.getSelectedNodes(); //获取选中节点
        for (var i = 0; i < nodes.length; i++) {
            zTree.removeNode(nodes[i]);
        }
    }

    /**
     *  删除子节点 --勾选节点
     * param obj
     */
    function removeZTreeNodeByChecked() {
        var zTree = $.fn.zTree.getZTreeObj("regionZTree");
        var nodes = zTree.getCheckedNodes(true); //获取勾选节点
        for (var i = 0; i < nodes.length; i++) {
            zTree.removeNode(nodes[i]);
        }
    }

    /**
     *  根据节点id 批量删除子节点
     * param obj
     */
    function removeZTreeNodebPi(obj) {
        var idnodes = obj.split(",");
        var zTree = $.fn.zTree.getZTreeObj("regionZTree");
        var nodes = zTree.getSelectedNodes();
        for (var i = 0; i < nodes.length; i++) {
            var nodes = zTree.getNodeByParam("id", nodes[i]);
            zTree.removeNode(nodes);
        }
    }
    //添加
    var newCount = 1;
    function addHoverDom(treeId, treeNode) {
        var sObj = $("#" + treeNode.tId + "_span");
        if (treeNode.editNameFlag || $("#addBtn_" + treeNode.tId).length > 0) return;
        var addStr = "<span class='button add' id='addBtn_" + treeNode.tId
            + "' title='添加子节点' onfocus='this.blur();'></span>";
        sObj.after(addStr);
        var btn = $("#addBtn_" + treeNode.tId);
        if (btn) btn.bind("click", function () {
            var zTree = $.fn.zTree.getZTreeObj("regionZTree");
            var name = "NewNode";
            var date = new Date();
            var year = date.getFullYear();
            var month = date.getMonth() + 1;
            var day = date.getDate();
            if (month < 10) {
                month = "0" + month;
            }
            if (day < 10) {
                day = "0" + day;
            }
            var nowDate = year + "-" + month + "-" + day;
            var model = { RoleName: name, RolePid: treeNode.id, RoleCreatePeople: "管理员", RoleCreateTime: nowDate };
            var val = JSON.stringify(model);
            $.ajax({


                url: "http://localhost:8888/api/Organization/AddRolesO",

                type: "POST",
                contentType: "application/json; charset=utf-8",
                data: val,
                crossDomain: true,
                dataType: 'json',
                success: function (data) {
                    var newnade = { id: data, name: name, pId: treeNode.id };
                    zTree.addNodes(treeNode, newnade);
                    var node = zTree.getNodeByParam("id", data, null); //根据新的id找到新添加的节点
                    zTree.selectNode(node); //让新添加的节点处于选中状态

                }
            });
            return false;
        });
    }
        /**
     * 选择节点
     * param obj
     */
    function removeHoverDom(treeId, treeNode) {
        $("#addBtn_" + treeNode.tId).unbind().remove();

    };
    //删除节点
    function zTreeOnRemove(event, treeId, treeNode) {
        {
            $.ajax({
                url: "http://localhost:8888/api/Organization/DeleteRolesO?id=" + treeNode.id,
                type: "get",
                success: function (data) {
                    if (data > 0) {
                    }
                    else {
                        alert('删除失败');
                    }
                }

            });
        }
    }
    //修改节点
    function zTreeOnRename(event, treeId, treeNode) {
        var date = new Date();
        var year = date.getFullYear();
        var month = date.getMonth() + 1;
        var day = date.getDate();
        if (month < 10) {
            month = "0" + month;
        }
        if (day < 10) {
            day = "0" + day;
        }
        var nowDate = year + "-" + month + "-" + day;
        var model = { "roleId": treeNode.id, "roleName": treeNode.name, "roleModifyPeople": "超级管理员", "roleModifyTime": nowDate };
        var val = JSON.stringify(model);
        $.ajax({


            url: "http://localhost:8888/api/Organization/UpdateRolesOName",

            type: "POST",
            contentType: "application/json; charset=utf-8",
            data: val,
            crossDomain: true,
            dataType: 'json',
            success: function (data) {
                if (data > 0) {
                }
                else {
                    alert('修改失败');
                }
            }
        });
    };
    var vm = new Vue({
        el: "#max",
        data: {
            RoleId: "",
            RoleName: "",
            RoleIdentify: "",
            RoleIsEnable: "1",
            RoleCreatePeople: "",
            RoleCreateTime: "",
            RoleModifyPeople: "",
            RoleModifyTime: "",
            hierarchyList: [
                { id: '0', name: '集团总部' },
                { id: '1', name: '集团公司' },
                { id: '2', name: '集团部门' }
            ],
        },
        created() {

        },
        methods: {
            updateRole: function (RoleId, RoleName, RoleIsEnable, RoleIdentify, RoleModifyPeople) {
                var params = new URLSearchParams();
                params.append('RoleId', RoleId);
                params.append('RoleName', RoleName);
                params.append('RoleIsEnable', RoleIsEnable);
                params.append('RoleIdentify', RoleIdentify);
                params.append('RoleModifyPeople', RoleModifyPeople);
                params.append('RoleModifyTime', nowDate);

                axios.post("/Organization/UpdateRolesO", params).then((response) => {
                    if (response.data > 0) {
                        /*根据 treeId 获取 zTree 对象*/
                        var zTree = $.fn.zTree.getZTreeObj("regionZTree"),
                            type = "refresh",
                            silent = false,
                            /*获取 zTree 当前被选中的节点数据集合*/
                            nodes = zTree.getSelectedNodes();
                        /*强行异步加载父节点的子节点。[setting.async.enable = true 时有效]*/
                        zTree.reAsyncChildNodes(nodes[0], type, silent);
                        alert('修改成功');
                    }
                });
            }
        }
    })
</script>