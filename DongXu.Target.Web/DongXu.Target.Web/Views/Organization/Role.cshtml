
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Role</title>
    <link href="~/zTree_v3/css/zTreeStyle/zTreeStyle.css" rel="stylesheet" />
    <script src="~/js/jquery-3.3.1.js"></script>
    <script src="~/zTree_v3/js/jquery.ztree.all.min.js"></script>
    <script src="~/js/vue.js"></script>
    <script src="~/js/axios.js"></script>
    <style>
        #max {
            width: 1500px;
            height: 600px;
            margin-left: 30px;
        }

        #title {
            width: 100%;
            height: 60px;
        }

            #title p {
                margin-left: 15px;
                margin-top: 15px;
            }

        #tree {
            width: 30%;
            height: 100%;
            float: left;
            border: 1px solid #000
        }

        #message {
            height: 70%;
            height: 100%;
            float: left;
            border: 1px solid #000
        }

            #message table {
                width: 600px;
                margin-top: 50px;
                border-collapse: separate;
                border-spacing: 0px 10px;
            }
    </style>
</head>

<body>
    <div id="max">
        <div id="title"><p>岗位管理</p></div>
        <div id="tree">
            <ul id="regionZTree" class="ztree"></ul>
        </div>
        <div id="message">
            <div>
                <p>机构名称:<span style="width:50px;">{{Oname}}</span>岗位名称:<span style="width:50px">{{Rname}}</span></p>
            </div>
            <table>
                <tr style="background-color:gainsboro">
                    <td>用户姓名</td>
                    <td>用户账号</td>
                    <td>操作</td>
                </tr>
                <tr v-for="item in RoleUserQueryList">
                    <td>{{item.UserRealName}}</td>
                    <td>{{item.UserName}}</td>
                    <td></td>
                </tr>
            </table>
        </div>
    </div>
</body>
</html>
<script>
        var setting = {
        view: {
            dblClickExpand: false,//双击节点时，是否自动展开父节点的标识
            showLine: true,//是否显示节点之间的连线
            fontCss: { 'color': 'black', 'font-weight': 'bold' },//字体样式函数
            selectedMulti: true, //设置是否允许同时选中多个节点
        },
        check: {
            //chkboxType: { "Y": "ps", "N": "ps" },
            chkboxType: { "Y": "", "N": "" },
            chkStyle: "checkbox",//复选框类型
            enable: true //每个节点上是否显示 CheckBox
        },
        //增删改，移动复制
        edit: {
            enable: true, //如果enable为flase，那么树就不能移动了
            showRemoveBtn: false, //是否显示树的删除按钮
            showRenameBtn: false, //是否显示数的重命名按钮
            isSimpleData: true, //数据是否采用简单 Array 格式，默认false
            treeNodeKey: "id",  //在isSimpleData格式下，当前节点id属性
            treeNodeParentKey: "parentId",//在isSimpleData格式下，当前节点的父节点id属性
            showLine: true, //是否显示节点间的连线
            removeTitle: "删除节点",//删除Logo的提示
            renameTitle: "编辑节点",//修改Logo的提示
            //拖拽
            drag: {
                isCopy: true,//能够复制
                isMove: true,//能够移动
                prev: false,//不能拖拽到节点前
                next: false,//不能拖拽到节点后
                inner: true//只能拖拽到节点中
            }
        },
        data: {
            simpleData: {//简单数据模式
                enable: true,
                idKey: "id",
                pIdKey: "pId",
                rootPId: null
            }
        },
        callback: {
            beforeExpand: zTreeBeforeExpand, // 用于捕获父节点展开之前的事件回调函数，并且根据返回值确定是否允许展开操作
            //单击事件
            onClick: zTreeOnClick
        }
    };
    $(function () {
        GetRolesRList();
    })
    function zTreeBeforeExpand(treeId, treeNode) {
        return true;
    };
    //获取结点
    function GetRolesRList() {
        $.ajax({
            url: "https://localhost:8888/api/Organization/GetRolesRList",
            async: false,
            success: function (data) {
                var json = eval(data); // 数组
                zNodes = "[";
                $.each(json, function (index, item) {
                    if (json[index].rolePid == 0) {
                        zNodes += "{id:" + json[index].roleId
                            + ",pId:" + json[index].rolePid
                            + ",name:'" + json[index].roleName
                            + "',open:true}";
                    }
                    else {
                        zNodes += "{id:" + json[index].roleId
                            + ",pId:" + json[index].rolePid
                            + ",name:'" + json[index].roleName
                            + "'}";
                    }
                    if (index != json.length - 1)
                        zNodes += ",";
                });
                zNodes += "]";
                zNodes = eval(zNodes);
                zTreeObj = $.fn.zTree.init($("#regionZTree"),setting, zNodes);
            },
            error: function (e) {
            }
        });
    };
    //点击事件
    function zTreeOnClick(event, treeId, treeNode) {
        $.ajax({
            url: "https://localhost:8888/api/Organization/GetRolesOListById?RoleId=" + treeNode.id,
            async: false,
            success: function (data) {
                console.log(data);
                if (data.RoleIdentify == 3) {
                    GetRoleUserQueryList(data.RoleId);
                }
                else {

                }
            }
        })
    }
    function GetRoleUserQueryList(roleId) {
        $.ajax({
            url: "https://localhost:8888/api/Organization/GetRoleUserQueryList?RoleId=" + roleId,
            success: function (data) {
                vm.$data.RoleUserQueryList = data;
            }
        })
    }
    var vm = new Vue({
        el: "#max",
        data: {
            RoleUserQueryList: [],
            Oname: "",
            Rname:""

        },
        created() {

        },
        methods: {

        }
    })
</script>