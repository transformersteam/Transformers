
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>管理层首页</title>
    <script src="~/js/jquery-3.3.1.js"></script>
    <script src="~/js/vue.js"></script>             @*vue*@
    <script src="~/js/axios.js"></script>
    <script src="~/js/zpageNav.js"></script>        @*分页js*@
    <link href="~/js/zpageNav.css" rel="stylesheet" />   @*分页样式*@
    <script src="~/js/echarts.min.js"></script>    @*Echarts图*@
    <link href="~/lib/bootstrap/dist/css/bootstrap.css" rel="stylesheet" />
</head>
<body>
    <div style="padding:20px;" id="app">
        <div class="panel panel-primary">
            <div class="panel-heading">我的待阅<span>{{sum}}</span><a href="" title="More" style="color:deepskyblue;float:right">More</a></div>
            <table class="table table-bordered table-striped text-center">
                <thead>
                    <tr>
                        <td>业务名称</td>
                        <td>完成情况</td>
                        <td>级别</td>
                        <td>责任人</td>
                        <td>完成时间</td>
                        <td>当期进度</td>
                        <td>状态</td>
                    </tr>
                </thead>
                <tbody>
                    <tr v-for="data in waitread" class="data-row">
                        <td>{{data.goalId}}</td>
                        <td><a href="/WaitRead/TargetDetails?id={{data.goalId}}">{{data.goalName}}</a></td>
                        <td>{{data.goalStateName}}</td>
                        <td>{{data.indexLevelGrade}}</td>
                        <td>{{data.goalChargePeople}}</td>
                        <td>{{data.goalEndTime}}</td>
                        <td>{{data.feedbackNowEvolve}}</td>
                        <td>{{data.feedbackId}}</td>
                    </tr>
                </tbody>
            </table>
            <zpagenav v-bind:page="page" v-bind:page-size="pageSize" v-bind:total="total"
                      v-bind:max-page="maxPage" v-on:pagehandler="getWaitRead">
            </zpagenav>
        </div>
        <div class="panel panel-primary">
            <div class="panel-heading">积分排名</div>
            <div id="main" style="width:1200px;height:400px;margin-left:250px"></div>
        </div>
        <div class="panel panel-primary" style="height:450px">
            <div class="panel-heading">红绿灯状态</div>
            <div style="float:left">
                <div id="redblue" style="width:700px;height:400px;margin-left:250px"></div>
            </div>
            <div style="float:right;width:700px;height:358px">
                <div id="dfd" style="width:700px;height:400px;margin-right:250px"></div>
            </div>
        </div>
        <div class="panel panel-primary" style="height:400px">
            <div class="panel-heading">运行情况</div>
            <div id="condition" style="float:left;width:900px;height:350px;margin-left:30px;padding-top:15px;padding-left:20px"></div>
            <div style="float:right;width:700px;padding-right:50px">
                <table class="table table-bordered table-striped text-center">
                    <thead>
                        <tr>
                            <td>目标状态</td>
                            <td>数量</td>
                            <td>比例</td>
                            <td>说明</td>
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-for="data in condition" class="data-row">
                            <td>{{data.goalState_Name}}</td>
                            <td>{{data.count}}</td>
                            <td>{{data.percent}}%</td>
                            <td>{{data.goalState_Explain}}</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</body>
</html>
<script type="module">
    var vm = new Vue({
        el: "#app",
        data: {
            waitread: [],
            condition:[],
            page:1,
            pageSize: 4,
            total: 100,
            maxPage: 9,
            sum:0
        },
        mounted() {   //钩子函数
            this.getWaitRead();    //显示
            this.getRunCondition();   //运行情况
            getintegral();         //积分排名
            getredgreen();         //红绿灯情况
            getCondition();        //运行情况
        },
        methods: {
            getWaitRead: function () {      //显示
                axios.get('@Url.Action("GetWaitReadList","WaitRead")', { params:{id:@ViewBag.id}}).then(
                    (response) => {
                        this.waitread = [];
                        this.total = response.data.total;
                        this.maxPage = response.data.maxPage; 
                        for (var i = 0; i < response.data.getList.length; i++) {
                            this.waitread.push(response.data.getList[i]);  //待阅数据
                            this.sum = this.waitread.length;   //计算总数
                        }
                    }
                ).catch(function (response) {   //捕捉异常
                    alert(response);
                })
            },
            getRunCondition: function () {     //运行情况
                axios.get('@Url.Action("GetRunCondition","WaitRead")').then(
                    (response) => {
                        this.condition = response.data   //运行情况表格显示
                    }
                )
            }
        }
    })

    //积分排名
    function getintegral() {
        var myCharty = echarts.init(document.getElementById('main'))
        var alldata = [];
        $.ajax({
            url: "/WaitRead/GetIntergalUser",
            type: "get",
            data: {id:@ViewBag.id},
            dataType: "json",
            success: function (data) {
                alldata.push(data.datacount);
                alldata.push(data.dataname);
                var option = {
                        title : {
                            text: '积分排名',
                        },
                        tooltip : {
                            trigger: 'axis'
                        },
                        legend: {
                            data:['蒸发量','降水量']
                        },
                        toolbox: {
                            show : true,
                            feature : {
                                mark : {show: true},
                                dataView : {show: true, readOnly: false},
                                magicType : {show: true, type: ['line', 'bar']},
                                restore : {show: true},
                                saveAsImage : {show: true}
                            }
                        },
                        calculable : true,
                        xAxis : [
                            {
                                type: 'category',
                                data: alldata[1],
                            }
                        ],
                        yAxis : [
                            {
                                type : 'value'
                            }
                        ],
                        series : [
                            {
                                name:'积分总数',
                                type: 'bar',
                                data: alldata[0],
                                markPoint : {
                                    data : [
                                        {type : 'max', name: '最大值'},
                                        {type : 'min', name: '最小值'}
                                    ]
                                },
                                markLine : {
                                    data : [
                                        {type : 'average', name: '平均值'}
                                    ]
                                }
                            },
                        ]
                };
                myCharty.setOption(option);
                }            
            })
        }

    //红绿灯情况
    function getredgreen() {
        var myCharty=echarts.init(document.getElementById('redblue'))
        var option = {
                tooltip : {
                    trigger: 'axis',
                    axisPointer : {            // 坐标轴指示器，坐标轴触发有效
                        type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'
                    }
                },
                legend: {
                    data:['直接访问', '邮件营销','联盟广告','视频广告','搜索引擎']
                },
                toolbox: {
                    show : true,
                    feature : {
                        mark : {show: true},
                        dataView : {show: true, readOnly: false},
                        magicType : {show: true, type: ['line', 'bar', 'stack', 'tiled']},
                        restore : {show: true},
                        saveAsImage : {show: true}
                    }
                },
                calculable : true,
                xAxis : [
                    {
                        type : 'value'
                    }
                ],
                yAxis : [
                    {
                        type : 'category',
                        data : ['周一','周二','周三','周四','周五','周六','周日']
                    }
                ],
                series : [
                    {
                        name:'直接访问',
                        type:'bar',
                        stack: '总量',
                        itemStyle : { normal: {label : {show: true, position: 'insideRight'}}},
                        data:[320, 302, 301, 334, 390, 330, 320]
                    },
                    {
                        name:'邮件营销',
                        type:'bar',
                        stack: '总量',
                        itemStyle : { normal: {label : {show: true, position: 'insideRight'}}},
                        data:[120, 132, 101, 134, 90, 230, 210]
                    },
                    {
                        name:'联盟广告',
                        type:'bar',
                        stack: '总量',
                        itemStyle : { normal: {label : {show: true, position: 'insideRight'}}},
                        data:[220, 182, 191, 234, 290, 330, 310]
                    },
                    {
                        name:'视频广告',
                        type:'bar',
                        stack: '总量',
                        itemStyle : { normal: {label : {show: true, position: 'insideRight'}}},
                        data:[150, 212, 201, 154, 190, 330, 410]
                    },
                    {
                        name:'搜索引擎',
                        type:'bar',
                        stack: '总量',
                        itemStyle : { normal: {label : {show: true, position: 'insideRight'}}},
                        data:[820, 832, 901, 934, 1290, 1330, 1320]
                    }
                ]
            };
         myCharty.setOption(option);
    }

    //运行情况
    function getCondition() {
        var dataname = [];
        var datacount = [];
        var runCondition = echarts.init(document.getElementById('condition'))
        console.log(runCondition)
        $.ajax({
            url: "/WaitRead/GetEchartRunCondition",
            type: "get",
            dataType:"json",
            success: function (data) {
                for (var i = 0; i < data.dataname.length; i++) {
                    dataname.push(data.dataname[i]);
                }
                for (var i = 0; i < data.datacount.length; i++) {
                    datacount.push(data.datacount[i]);
                }
                    var option = {
                            title : {
                                text: '运行情况',
                                x:'center'
                            },
                            tooltip : {
                                trigger: 'item',
                                formatter: "{a} <br/>{b} : {c} ({d}%)"
                            },
                            legend: {
                                orient: 'vertical',
                                left: 'left',
                                data: dataname                              
                            },
                            series : [
                                {
                                    name: '访问来源',
                                    type: 'pie',
                                    radius : '55%',
                                    center: ['50%', '60%'],
                                    data: [
                                        { "value": datacount[0], "name": dataname[0] },
                                        { "value": datacount[1], "name": dataname[1] },
                                        { "value": datacount[2], "name": dataname[2] },
                                        { "value": datacount[3], "name": dataname[3] },
                                        { "value": datacount[4], "name": dataname[4] },
                                    ],
                                    itemStyle: {
                                        emphasis: {
                                            shadowBlur: 10,
                                            shadowOffsetX: 0,
                                            shadowColor: 'rgba(0, 0, 0, 0.5)'
                                        }
                                    }
                                }
                            ]
                        };
                        runCondition.setOption(option);
                    }
                })
            }
</script>
